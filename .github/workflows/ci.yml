name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r multi_agent_system/requirements.txt
        pip install pytest-cov
    
    - name: Run basic tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-ci' }}
        PYTHONPATH: ${{ github.workspace }}
      run: |
        cd multi_agent_system
        python -m pytest tests/test_basic.py -v
    
    - name: Check Python syntax
      run: |
        python -c "import multi_agent_system.core.config; print('Config module OK')"
        python -c "import multi_agent_system.tools.scraping_tools; print('Scraping tools OK')"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8
    
    - name: Run black
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-ci' }}
      run: |
        cd multi_agent_system
        black --check .
    
    - name: Run flake8
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-ci' }}
      run: |
        cd multi_agent_system
        flake8 .

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-ci' }}
      run: |
        cd multi_agent_system
        safety check -r requirements.txt
    
    - name: Run bandit security check
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key-for-ci' }}
      run: |
        cd multi_agent_system
        bandit -r . -f json -o bandit-report.json || true